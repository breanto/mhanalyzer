apply plugin: 'java'
apply plugin: 'liquibase'

setEnvironment()

def setEnvironment () {
    ext.buildProperties = new Properties();
    
    def env = hasProperty('profile') ? profile : 'local'
    
    switch(env){
        case 'local':
            ext.buildProperties.load(new FileInputStream('local.properties'))
        break
        case 'prod':
            ext.buildProperties.load(new FileInputStream('prod.properties'))
        break
        default:
            ext.buildProperties.load(new FileInputStream('local.properties'))
        break
    }
}
    
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.augusttechgroup:gradle-liquibase-plugin:0.7'
        classpath 'mysql:mysql-connector-java:5.1.16'
    }
}

liquibase {
    changelogs{
        main{
                file = file('dbmaster.groovy')
            }
        }

    databases{
        local {
                 url = project.ext.buildProperties['dbUrl']
                 username =project.ext.buildProperties['dbUser']
                 password = project.ext.buildProperties['dbPwd']
             }
        }

    defaultDatabase = databases.local
}

ext.springCoreVersion = '3.2.8'
ext.springContextVersion = '3.2.8'

repositories {
    mavenCentral()
}

allprojects {
    apply plugin : 'java'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    version = '1.0'
    sourceCompatibility = 1.8

    jar{
        manifest.attributes provider : 'gradle'
    }
}

project(':mhanalyzer-backend'){

    dependencies{
        compile 'org.springframework:spring-core:3.2.9.RELEASE'
        compile 'org.springframework:spring-context:3.2.9.RELEASE'
        compile 'org.springframework:spring-jdbc:3.2.9.RELEASE'
        compile 'org.springframework:spring-test:3.2.9.RELEASE'
    }
}

project(':mhanalyzer-console'){

    apply plugin: 'application'

    dependencies{
        compile 'org.springframework:spring-context:3.2.9.RELEASE'
        compile project(':mhanalyzer-backend')
    }

    mainClassName = 'com.elmonko.AppMain'
}

